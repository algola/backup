@using PapiroMVC.Validation
@model PapiroMVC.Models.ProductViewModel

@{
    string stringsTitle = "~/Views/Shared/Strings";
    string strings = "~/Areas/Working/Views/Product/Strings";

    //Prendo il titolo dal menù
    ViewBag.Title = (string)HttpContext.GetLocalResourceObject(stringsTitle, "CodMenuProduct" + Model.Product.CodMenuProduct);

    //add all task in page
    Session.Add("TsksInPage", Model.Product.TsksInPage);

    ViewBag.FormatsName = Model.Product.FormatsName.ToList();

    
}

@section title{
    @Html.T(strings, "Product")
}

@section description{
    @Html.T(strings, "CreateProductDesc")
}


<div id="status">

    @Scripts.Render("~/bundles/jqueryval")
    @using (Ajax.BeginForm("Action", "Product", new AjaxOptions { UpdateTargetId = "status", OnBegin = "ShowProcessingMsg", OnComplete = "HideProcessingMsg", OnSuccess = "OnSuccess" }))
    {
        @Html.ValidationSummary(true)


        for (int i = 0; i < Model.Quantities.Count; i++)
        {
            @Html.EditorFor(model => model.Quantities[i]) 
        }

        @Html.EditorFor(m=>Model.Product)
        //@Html.Partial("_EditAndCreateProduct", Model.Product)

        <p>
            <button type="button" onclick="Javascript:window.location.replace('@Url.Action("Index", "Product", new { Area = "Working" })');">
                <i class="icon-arrow-left"></i>
                @HttpContext.GetLocalResourceObject(strings, "Cancel")
            </button>

            <button class="default" type="submit" name="@ViewBag.ActionMethod">
                <i class="icon-save"></i>
                @HttpContext.GetLocalResourceObject(strings, "Save")
            </button>

            @if (ViewBag.ActionMethod != "CreateProductSingleSheet")
            {
                <input class="button" type="submit" name="CreateProductSingleSheet"  value='@HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")' />
            }
        </p>
    }

</div>



@section breadcrumb {

}