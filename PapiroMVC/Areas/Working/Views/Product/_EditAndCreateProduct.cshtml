@using PapiroMVC.Validation
@model PapiroMVC.Models.ProductViewModel

@{
    string strings = "~/Areas/Working/Views/Product/Strings";
    ViewBag.FormatsName = Model.Product.FormatsName.ToList();    
}

<div id="status">

    @Scripts.Render("~/bundles/autocomplete")
    @using (Ajax.BeginForm("Action", "Product", new AjaxOptions { 
        UpdateTargetId = "status", 
        OnBegin = "showProcessingMsg", 
        OnComplete = "hideProcessingMsg", 
        OnSuccess = "OnSuccess" }, new { @class = "form-horizontal" }))
    {
        @Html.ValidationSummary(true)

        for (int i = 0; i < Model.Quantities.Count; i++)
        {            
        <div class="control-group">
            @Html.LabelFor(model => model.Quantities, new { @class = "col-sm-3 control-label no-padding-right" })
            <div class="controls col-sm-9">
                @Html.EditorFor(model => model.Quantities[i])
            </div>
        </div>            
        }

        @Html.EditorFor(x => x.Product)
    
        <p>
            <button class="btn btn-warning" type="button" onclick="Javascript:window.location.replace('@Url.Action("Index", "Product", new { Area = "Working" })');">
                <i class="icon-undo bigger-125"></i>
                @HttpContext.GetLocalResourceObject(strings, "Cancel")
            </button>

            <button class="default btn btn-primary" type="submit" name="@ViewBag.ActionMethod">
                <i class="icon-save bigger-160"></i>
                @HttpContext.GetLocalResourceObject(strings, "Save")
            </button>

            @if (ViewBag.ActionMethod != "CreateProduct")
            {
                <input class="btn" type="submit" name="CreateProductSingleSheet" value='@HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")' />
            }
        </p>
    }

</div>