@using PapiroMVC.Validation
@model PapiroMVC.Models.DocumentProduct

@{
    string strings = "~/Areas/Working/Views/Document/Strings";
    string stringsGrid = "~/Areas/Working/Views/Document/CustomerSupplierStrings";

    //********************************//********************************
    //devo sapere quanti sono i documentProduct per poter inizializzare i javascript per ciascuno
    string[] jInit = new string[Model.Document.DocumentProducts.Count];
    string jss = String.Empty;
    var js = Model.Document.DocumentProducts.ToArray();
    foreach (var j in js)
    {
        jInit[Array.IndexOf(js, j)] = "initPage" + j.CodDocumentProduct.Replace("-", "_");
        jss += "initPage" + j.CodDocumentProduct.Replace("-", "_") + ",";
    }
    //remove last common
    jss = jss.Remove(jss.Length - 1);

    //********************************//********************************

}

<div class="space-10"></div>

<div class="row">
    <div class="col-xs-12 col-sm-7">

        <div class="form-horizontal">
            @Html.HiddenFor(model => model.CodDocumentProduct)
            @Html.HiddenFor(model => model.CodDocument)
            @Html.HiddenFor(model => model.ProductName)
            @Html.HiddenFor(model => model.CodProduct)
            @Html.HiddenFor(model => model.Quantity)

            @Html.AlgolaEditorFor(model => model.TotalAmount)
            @Html.AlgolaEditorFor(model => model.UnitPrice)

        </div>
    </div>
    <div class="col-xs-12 col-sm-5">

        <button id="btn@(Model.CodDocumentProduct)" class="btn btn-primary"> @Html.T(strings, "CloneQty") </button>
        <button id="btnPrintToScreen@(Model.CodDocumentProduct)" class="btn btn-primary"> @Html.T(strings, "PrintToScreenQty") </button>
        <button id="btnGoToOrder@(Model.CodDocumentProduct)" class="btn btn-success"> @Html.T(strings, "GoToOrder") </button>

        @*<div id="piechart-placeholder" style="width: 90%; min-height: 150px; padding: 0px; position: relative;">
                <canvas class="flot-base" width="350" height="150" style="direction: ltr; position: absolute; left: 0px; top: 0px; width: 350px; height: 150px;"></canvas><canvas class="flot-overlay" width="350" height="150" style="direction: ltr; position: absolute; left: 0px; top: 0px; width: 350px; height: 150px;"></canvas><div class="legend"><div style="position: absolute; width: 100px; height: 110px; top: 15px; right: -30px; background-color: rgb(255, 255, 255); opacity: 0.85;"> </div><table style="position:absolute;top:15px;right:-30px;;font-size:smaller;color:#545454"><tbody><tr><td class="legendColorBox"><div style="border:1px solid null;padding:1px"><div style="width:4px;height:0;border:5px solid #68BC31;overflow:hidden"></div></div></td><td class="legendLabel">social networks</td></tr><tr><td class="legendColorBox"><div style="border:1px solid null;padding:1px"><div style="width:4px;height:0;border:5px solid #2091CF;overflow:hidden"></div></div></td><td class="legendLabel">search engines</td></tr><tr><td class="legendColorBox"><div style="border:1px solid null;padding:1px"><div style="width:4px;height:0;border:5px solid #AF4E96;overflow:hidden"></div></div></td><td class="legendLabel">ad campaings</td></tr><tr><td class="legendColorBox"><div style="border:1px solid null;padding:1px"><div style="width:4px;height:0;border:5px solid #DA5430;overflow:hidden"></div></div></td><td class="legendLabel">direct traffic</td></tr><tr><td class="legendColorBox"><div style="border:1px solid null;padding:1px"><div style="width:4px;height:0;border:5px solid #FEE074;overflow:hidden"></div></div></td><td class="legendLabel">other</td></tr></tbody></table></div>
            </div>*@

    </div>
</div>

<div id="dialog-message@(Model.CodDocumentProduct)" class="hide">

    <div class="vspace"></div>
    <div class="controls">
        <input type="text" id="qta@(Model.CodDocumentProduct)" placeholder="@Html.T(strings, "NewQty")">
    </div>
    <div class="vspace"></div>

</div>

<div id="dialog-message-create-order@(Model.CodDocumentProduct)" class="hide">

    <div class="vspace"></div>
    <div class="controls">
        Vuoi creare una commessa?
    </div>
    <div class="vspace"></div>

</div>

<div id="printvideo-message@(Model.CodDocumentProduct)" class="hide">

    <div class="vspace"></div>
    <div class="controls">
        <textarea id="printvideo@(Model.CodDocumentProduct)" class="autosize-transition" style="overflow: hidden; word-wrap: break-word; resize: horizontal; width:80vw;"></textarea>
    </div>
    <div class="vspace"></div>

</div>

<script type="text/javascript">

    $(document).ready(

         function () {
             initPage@(Model.CodDocumentProduct.Replace("-","_"))();
         });

    function initPage() {
        var arrayOfFunc = '@jss'.split(',');
        var arrayLength = arrayOfFunc.length;
        for (var i = 0; i < arrayLength; i++) {
            window[arrayOfFunc[i]]();
            //Do something
        }
    }

    function initPage@(Model.CodDocumentProduct.Replace("-","_"))() {

        $('textarea[class*=autosize]').autosize();

        $("#btn@(Model.CodDocumentProduct)").on('click', function (e) {
            e.preventDefault();

            hideProcessingMsg();

            function send@(Model.CodDocumentProduct.Replace("-","_"))() {

                showProcessingMsg();

                var datastring = {
                    "codDocument": '@Model.CodDocument',
                    "codDocumentProduct": '@Model.CodDocumentProduct',
                    "newQuantity": $("#qta@(Model.CodDocumentProduct)").val()
                };

                //at firt time save estimate or
                $.ajax({
                    type: "POST",
                    url: "@(Url.Action("CloneDocumentProduct", "Document"))",
                    data: datastring,
                    success: function (data) {
                        if (data.redirectUrl) {
                            hideProcessingMsg();
                            // if the server returned a JSON object containing an url
                            // property we redirect the browser to that url
                            window.location.href = data.redirectUrl;
                        } else {
                            hideProcessingMsg();
                        }

                        return;
                    },
                    error: function (xhr) {
                        hideProcessingMsg();
                        alert('error');
                    }
                });

            };

            //enterkey on dialog
            $('#qta@(Model.CodDocumentProduct)').keypress(function (e) {
                if (e.keyCode == $.ui.keyCode.ENTER) {
                    send@(Model.CodDocumentProduct.Replace("-","_"))();
                    $(this).closest(".ui-dialog-content").dialog("close");
                }
            });

            var dialog = $("#dialog-message@(Model.CodDocumentProduct)").removeClass("hide").dialog({
                width: 'auto',
                modal: true,
                title: '@Html.T(strings, "DialogCloneTitle")',
                title_html: true,
                buttons: [
                {
                    text: '@Html.T(stringsGrid, "Cancel")',
                    "class": "btn btn-mini",
                    click: function () {
                        $(this).dialog("close");
                    }
                },
                {
                    text: '@Html.T(stringsGrid, "Ok")',
                    "class": "btn btn-primary btn-mini",
                    click: function () {

                        send@(Model.CodDocumentProduct.Replace("-","_"))();
                        hideProcessingMsg();

                        $(this).dialog("close");
                    }
                }
                ]
            });

            /**
            dialog.data( "uiDialog" )._title = function(title) {
            title.html( this.options.title );
            };
            **/
        });

        $("#btnGoToOrder@(Model.CodDocumentProduct)").on('click', function (e) {
            e.preventDefault();
            hideProcessingMsg();

            function send@(Model.CodDocumentProduct.Replace("-","_"))() {

                showProcessingMsg();

                var datastring = {

                    "codDocumentProduct": '@Model.CodDocumentProduct',

                };

                //at firt time save estimate or
                $.ajax({
                    type: "GET",
                    url: "@(Url.Action("CreateOrder", "Document"))",
                    data: datastring,
                    success: function (data) {


                        alert("ok");

                        if (data.redirectUrl) {
                            hideProcessingMsg();
                            // if the server returned a JSON object containing an url
                            // property we redirect the browser to that url
                            window.location.href = data.redirectUrl;
                        } else {
                            hideProcessingMsg();
                        }

                        return;
                    },
                    error: function (xhr) {
                        hideProcessingMsg();
                        alert('error');
                    }
                });

            };

            //enterkey on dialog
            $('#qta@(Model.CodDocumentProduct)').keypress(function (e) {
                if (e.keyCode == $.ui.keyCode.ENTER) {
                    send@(Model.CodDocumentProduct.Replace("-","_"))();
                    $(this).closest(".ui-dialog-content").dialog("close");
                }
            });


            var dialog = $("#dialog-message-create-order@(Model.CodDocumentProduct)").removeClass("hide").dialog({
                width: 'auto',
                modal: true,
                title: '@Html.T(strings, "GoToOrderTitle")',
                title_html: true,
                buttons: [
                {
                    text: '@Html.T(stringsGrid, "Cancel")',
                    "class": "btn btn-mini",
                    click: function () {
                        $(this).dialog("close");
                    }
                },
                {
                    text: '@Html.T(stringsGrid, "Ok")',
                    "class": "btn btn-primary btn-mini",
                    click: function () {

                        send@(Model.CodDocumentProduct.Replace("-","_"))();
                        hideProcessingMsg();

                        $(this).dialog("close");
                    }
                }
                ]
            });
        });





        $("#btnPrintToScreen@(Model.CodDocumentProduct)").on('click', function (e) {
            e.preventDefault();


            showProcessingMsg();

            var datastring = {
                "codDocumentProduct": '@Model.CodDocumentProduct',
            };


            //at firt time save estimate or
            $.ajax({
                type: "POST",
                url: "@(Url.Action("PrintDocumentProductCosts", "Document"))",
                data: datastring,
                success: function (data) {
                    if (data.redirectUrl) {
                        hideProcessingMsg();
                        // if the server returned a JSON object containing an url
                        // property we redirect the browser to that url
                        window.location.href = data.redirectUrl;
                    } else {

                        hideProcessingMsg();
                        $('#printvideo@(Model.CodDocumentProduct)').val(data).trigger('autosize.resize');



                        var dialogPrint = $("#printvideo-message@(Model.CodDocumentProduct)").removeClass("hide").dialog({
                            width: 'auto',
                            modal: true,
                            title: '@Html.T(strings, "DialogPrintTitle")',
                            title_html: true,
                            buttons: [
                            {
                                text: '@Html.T(stringsGrid, "Ok")',
                                "class": "btn btn-primary btn-mini",
                                click: function () {
                                    $(this).dialog("close");
                                }
                            }
                            ]
                        });


                    }

                    return;
                },
                error: function (xhr) {
                    hideProcessingMsg();
                    alert('error');
                }
            });

        });

    };

</script>