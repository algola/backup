@using PapiroMVC.Validation
@model PapiroMVC.Models.ProductPartHotPrinting

@{
    string strings = "~/Areas/Working/Views/Product/Strings";

    //we want ot use different resource only to share it between areas and parts
    string stringsCod = "~/Views/Shared/TypeOfTaskAndCodTypeOfTask";

    
    var tsksInPage = (List<PapiroMVC.Models.TypeOfTask>)Session["TsksInPage"];

    List<PapiroMVC.Models.OptionTypeOfTask> c = tsksInPage.FirstOrDefault(x => x.CodTypeOfTask == Model.OptionTypeOfTask.CodTypeOfTask).OptionTypeOfTasks.OrderBy(x => x.IdexOf).ToList();
    foreach (PapiroMVC.Models.OptionTypeOfTask optItem in c)
    {
        optItem.OptionName = Html.T(stringsCod, "Cod" + optItem.CodOptionTypeOfTask);
    }
}

@if ((Model.Hidden == null) || (Model.Hidden != true))
{
    <div class="form-group">
        @Html.Label(Model.OptionTypeOfTask.TypeOfTask.TaskName, new { @class = "col-sm-3 control-label no-padding-right" })

        <div class="controls col-sm-9">
            @Html.DropDownListFor((model => model.CodOptionTypeOfTask),
         new SelectList(c, "CodOptionTypeOfTask", "OptionName"), new { @class = "col-xs-10 col-sm-5", id = "hot" })
        </div>
    </div>
}
else
{
    @Html.HiddenFor(model => model.CodOptionTypeOfTask)
}
@Html.HiddenFor(model => model.IsSelected)
@Html.HiddenFor(model => model.TimeStampTable)
@Html.HiddenFor(model => model.CodProductPartTask)
@Html.HiddenFor(model => model.CodProductPart)
@Html.HiddenFor(model => model.Hidden)
@Html.HiddenFor(model => model.ImplantHidden)
@Html.HiddenFor(model => model.TypeOfProductPartTask)
@Html.HiddenFor(model => model.CodItemGraph)
@Html.HiddenFor(model => model.IndexOf)
@Html.HiddenFor(model => model.IfSelectedResetOtherCodItemGraph)

@if (Model.ProductPartTaskOptionsPerView.Count > 0)
{
    <div class="visible-md visible-lg hidden-sm ">

        <div class="col-sm-3 control-label no-padding-right"></div>
        <div class="col-sm-9">
            <div class=" no-padding controls col-md-4">
                @Html.T(strings, "HeadHotPrintingFoil")
            </div>
            <div class="no-padding controls col-md-4">
                @Html.T(strings, "HeadHotPrintingFormat")
            </div>

        </div>

    </div>
}
@Html.EditorFor(model => model.ProductPartTaskOptionsPerView)

<script type="text/javascript">

    $(document).ready(function () {
        $("#hot").change(function () {
            var codHotPrinting = "";
            $("#hot option:selected").each(function () {
                codHotPrinting += $(this)[0].value;
            });

            $(".todelete:hidden").remove();

            //data are collected into
            var dataToPass = $('#prod').serialize();
            showProcessingMsg();
            $.post('@(Url.Action("UpdateHotPrinting", "Product", new { area = "Working" }))', dataToPass)
                .done(function (x) {
                    hideProcessingMsg();
                    $('#status').html(x);
                    clearValidationErrors();
                    $("#hot").focus();
                });

        });
    });


</script>


<script type="text/javascript">

    $(document).ready(function () {
        $("#prod").submit(function (e) {
            $(".todelete:hidden").remove();
        });
    });

</script>