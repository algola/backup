@using PapiroMVC.Validation
@model PapiroMVC.Models.CostDetail
@using System.Web.Script.Serialization;


@{
    string strings = "~/Areas/Working/Views/Document/Strings";
    //Prendo il titolo dal menù
    ViewBag.Title = Html.T(strings, "EditCost");

    string url = Url.Action("Costs", "Document", new { codDocumentProduct = Model.TaskCost.CodDocumentProduct });
}

@section title{
    @Html.T(strings, "Document")
}

@section description{
    @Html.T(strings, "EditCostDesc")
}

<div id="dialog" title="***Basic dialog" class="span4">

    <table id="costGrid@(Model.TaskCost.CodDocumentProduct)">
        <tr>
            <td />
        </tr>
    </table>
    <div id="pagerCostGrid(@Model.TaskCost.CodDocumentProduct)"></div>
</div>


<h3 class="header smaller lighter green">Macchina da stampa / lavorazione</h3>
<div class="control-group">
    <div class="controls col-sm-9">
        @Html.DropDownListFor(y => y.CodTaskExecutorSelected,
                new SelectList(Model.TaskExecutors, "CodTaskExecutor", "TaskExecutorName"), new { id = "tsk" })
    </div>
</div>

<div id="partial">
    @{switch (Model.TypeOfCostDetail)
    {
        case PapiroMVC.Models.CostDetail.CostDetailType.PrintingSheetCostDetail:
            Html.RenderPartial("_PrintingSheetCostDetail", Model);
            break;
        case PapiroMVC.Models.CostDetail.CostDetailType.PrintingLabelRollCostDetail:
            Html.RenderPartial("_PrintingLabelRollCostDetail", Model);
            break;

    @*          case PapiroMVC.Models.CostDetail.CostDetailType.PrintingRollCostDetail:
            break;
        case PapiroMVC.Models.CostDetail.CostDetailType.LithoSheetCostDetail:
            break;
        case PapiroMVC.Models.CostDetail.CostDetailType.DigitalSheetCostDetail:
            break;
    *@          default:
            break;
    }}

</div>

<p>
    <button class="btn btn-warning" type="button" onclick="Javascript:window.location.replace('@Url.Action("EditDocumentProducts", "Document", new { Area = "Working", id=Model.TaskCost.DocumentProduct.CodProduct})');">
        <i class="icon-undo bigger-125"></i>
        @Html.T(strings, "Back")
    </button>
@*
    <button class="default btn btn-primary" onclick="Javascrip:save()" name="@ViewBag.ActionMethod">
        <i class="icon-save bigger-160"></i>
        @Html.T(strings, "Save")
    </button>
*@
</p>

<script type="text/javascript">
    function save() {

        var url = '@Url.Action("SaveCostDetail", "Document", new { Area = "Working" })'
        $.ajax({
            url: url,
            data: {}, //parameters go here in object literal form
            type: 'GET',
            datatype: 'json',
            success: function (result) {
                //if (result.redirectUrl) {
                //    hideProcessingMsg();
                //    // if the server returned a JSON object containing an url
                //    // property we redirect the browser to that url
                //    window.location.href = result.redirectUrl;
                reloadGrid();
                //                }
            },

            error: function (XMLHttpRequest, textStatus, errorThrown) {

                var msg = JSON.parse(XMLHttpRequest.responseText);
                alert('@Url.Action("Error","Home",new {Area=""})/' + msg.View);
                window.location.href = '@Url.Action("Error","Home",new {Area=""})/' + msg.View;
                return;
            }
        });
    }
</script>

<script>

    $(function () {
        var offset = $("#dialog").offset();
        var topPadding = 50;

        $("#dialog").stop().animate({
            marginTop: $(window).scrollTop() - offset.top + topPadding
        });

        $(window).scroll(function () {
            $("#dialog").stop().animate({
                marginTop: $(window).scrollTop() - offset.top + topPadding
            });
        });
    })

</script>

<script type="text/javascript">

    $(function () {

        var lastSel = -1;

        var myGrid = $("#costGrid@(Model.TaskCost.CodDocumentProduct)").jqGrid({
            url: '@url',
            datatype: 'json',
            colModel: [
                { name: 'Operation', label: '@HttpContext.GetLocalResourceObject(strings, "OperationsCaption")', width: 80, align: 'right', editable: false, hidden: true },
                    { name: 'CodCost', width: 60, align: 'right', editable: true, hidden: true },
                    { name: 'Description', label: '@HttpContext.GetLocalResourceObject(strings, "Description")', width: 70, align: 'right', editable: true },
                    { name: 'UnitCost', label: '@HttpContext.GetLocalResourceObject(strings, "UnitCost")', width: 50, align: 'right', editable: false },
                    { name: 'Quantity', label: '@HttpContext.GetLocalResourceObject(strings, "Quantity")', width: 50, align: 'right', editable: false },
                    { name: 'TotalCost', label: '@HttpContext.GetLocalResourceObject(strings, "TotalCost")', width: 50, align: 'right', editable: false }],

            pager: '#pagercostGrid@(Model.TaskCost.CodDocumentProduct)',

            rowNum: 100,
            rowList: [100, 200, 500],
            viewrecords: true,
            autowidth: true,
            width: 650,

        });

        myGrid.jqGrid('navGrid', '#pagercostGrid@(Model.TaskCost.CodDocumentProduct)', { edit: false, add: false, del: false, search: false });

    });

    function reloadGrid() {
        $("#costGrid@(Model.TaskCost.CodDocumentProduct)").trigger("reloadGrid");
    }

</script>


<script type="text/javascript">

    $(document).ready(function () {
        $("#tsk").change(function () {
            var codTaskExecutor = "";
            $("#tsk option:selected").each(function () {
                codTaskExecutor += $(this)[0].value;
            });

            //data are collected into
            var dataToPass = {
                codTaskExecutor: codTaskExecutor,
                codCost: '@(Model.TaskCost.CodCost)'
            };

            $.ajax({
                url: '@(Url.Action("GetPartialCost", "Document", new { area = "Working" }))',
                type: 'POST',
                data: JSON.stringify(dataToPass),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    $('#partial').html(data);
                },
                error: function () {
                    alert("error");
                },

            });


        });
    });


</script>

@*
    @Html.Partial("_EditAndCreateDocument", Model)
*@

@section specificPlugInStyle {
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/jquery-ui-1.10.3.full.min.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/datepicker.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/ui.jqgrid.css" />

    <style type="text/css">
        #dialog {
            width: 350px;
            float: right;
            background: #fff;
            padding: 10px;
        }
    </style>

}

@section specificPluginScript {
    <script src="~/Content/acetheme/assets/js/date-time/bootstrap-datepicker.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jqGrid/jquery.jqGrid.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jqGrid/i18n/grid.locale-en.js"></script>
    <script src="~/Content/acetheme/assets/js/jquery-ui-1.10.3.full.min.js"></script>
}

@section ScriptS{
    @Scripts.Render("~/bundles/jqueryval")
}
