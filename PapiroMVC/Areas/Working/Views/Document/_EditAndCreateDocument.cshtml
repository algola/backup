@model PapiroMVC.Models.Document
@using PapiroMVC.Validation


@{

    string stringsGrid = "~/Areas/Working/Views/Document/CustomerSupplierStrings";
    string url = Url.Action("CustomerSupplierList", new { controller = "CustomerSupplier", area = "DataBase" });
    
    }

<div id="status"> 
    @Scripts.Render("~/bundles/jqueryval")
@using (Ajax.BeginForm("Action", "Document", new AjaxOptions { UpdateTargetId = "status", OnBegin = "ShowProcessingMsg", OnComplete = "HideProcessingMsg", OnSuccess="OnSuccess" }))
{
    @Html.ValidationSummary(true)

@Html.HiddenFor(model => model.CodCustomer)
@Html.AlgolaEditorFor(model => model.Customer)

        
<a href="javascript:void(0)" id="staticDialogCustomer">@Html.T(stringsGrid, "DialogTitle")</a>
    
@Html.HiddenFor(model => model.CodDocument)
@Html.AlgolaEditorFor(model => model.DateDocument)
@Html.HiddenFor(model => model.DocumentName)
@Html.AlgolaEditorFor(model => model.Notes)
@Html.AlgolaEditorFor(model => model.Number)
@Html.HiddenFor(model => model.TimeStampTable)

    
<div id="_listDocumentProduct">
    @Html.Partial("_ListDocumentProduct", Model)
</div>


<br />
<br />
    
        <button type="button" onclick="Javascript:window.location.replace('@Url.Action("CreateProduct", "Product", new {Area="Working"})');">            
            <i class="icon-plus-2"></i>
            @Html.T(stringsGrid, "NewProduct")
        </button>        
        <button class="default" type="submit" name="@ViewBag.ActionMethod">
                 <i class="icon-save"></i>    
                 @HttpContext.GetLocalResourceObject(stringsGrid, "Save")
        </button> 

}
    </div>

<script type="text/javascript">
    $(document).ready(
       
        function () {

            $('#DateDocument').datepicker({ dateFormat: "dd/mm/yy" });

            $('#staticDialogCustomer').click(function (e) {

                //eventually stop spinner
                HideProcessingMsg(); $.Dialog({
                    'title': '@Html.T(stringsGrid, "DialogSubTitle")',
                    'content': '<table id="gridArticle"><tr><td/></tr></table><div id="pagerArticle"></div>',
                    'buttons': {
                        '@Html.T(stringsGrid, "Cancel")': {
                        'action': function () { }
                    },
                    '@Html.T(stringsGrid, "Ok")': {
                        'action': function () {
                            if (lastSel != -1) {

                                var myGrid = $('#gridArticle'),
                                    selRowId = myGrid.jqGrid('getGridParam', 'selrow'),
                                    celValueCodCustemerSupplier = myGrid.jqGrid('getCell', lastSel, 'CodCustomer');

                                $('#CodCustomer').val(celValueCodCustemerSupplier);


                                var myGrid = $('#gridArticle'),
                                    selRowId = myGrid.jqGrid('getGridParam', 'selrow'),
                                    celValueCustemerSupplier = myGrid.jqGrid('getCell', lastSel, 'BusinessName');

                                $('#Customer').val(celValueCustemerSupplier);

                              

                            }

                        }
                    }
                }
                });

                var lastSel = -1;

                var myGrid = $("#gridArticle").jqGrid({
                    url: '@url',
                datatype: 'json',
                colModel: [
                    { name: 'Id', label: 'OperationsCaption', key: true, width: 80, editable: false, hidden: true },
                    { name: 'CodCustomer', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "CodCustemerSupplierCaption")', width: 120, align: 'left', editable: false, hidden: false },
                    { name: 'Customer', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "CustomersCaption")', width: 120, align: 'left', editable: false, hidden: true },
                    { name: 'BusinessName', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "BusinessNameCaption")', width: 120, align: 'left', editable: false, hidden: false },

                ],


                pager: '#pagerArticle',

                rowNum: 15,
                rowList: [15, 20, 50],
                viewrecords: true,
                autowidth: false,

                onSelectRow: function (id) {
                    if (id && id !== lastSel) {
                        myGrid.jqGrid('restoreRow', lastSel);
                        lastSel = id;
                    }
                },

                ondblClickRow: function (id, ri, ci) {
                    myGrid.jqGrid('editRow', id, {
                        keys: true,
                        oneditfunc: function () {
                            //...
                        },
                        aftersavefunc: function () {
                            $("#gridArticle").trigger("reloadGrid");
                        },
                        url: 'editUrl'
                    });
                    //editRow(rowid, keys, oneditfunc, successfunc, url, extraparam, aftersavefunc, errorfunc, afterrestorefunc);
                    return;
                }

            });

                myGrid.jqGrid('navGrid', '#pagerArticle', { edit: false, add: false, del: false, search: true });
                myGrid.jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });

            });


        });

    function reloadArticle() {
        $("#gridArticle").trigger("reloadGrid");
    }

</script>