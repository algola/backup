@model PapiroMVC.Models.Document
@using PapiroMVC.Validation

@{
    string stringsGrid = "~/Areas/Working/Views/Document/CustomerSupplierStrings";
    string url = Url.Action("CustomerSupplierList", new { controller = "CustomerSupplier", area = "DataBase" });    
}

<div id="status">
    @Scripts.Render("~/bundles/autocomplete")
    @using (Ajax.BeginForm("Action", "Document", new AjaxOptions { UpdateTargetId = "status", OnBegin = "showProcessingMsg", OnComplete = "hideProcessingMsg", OnSuccess = "OnSuccess" }, new { @class = "form-horizontal" }))
    {
        
        @Html.ValidationSummary(true)
            
        @Html.AlgolaEditorFor(model => model.Customer, new { @readonly = "readonly" })
        @Html.HiddenFor(model => model.CodDocument)
        @Html.AlgolaEditorFor(model => model.DateDocument)
        @Html.HiddenFor(model => model.DocumentName)
        @Html.AlgolaEditorFor(model => model.Notes)
        @Html.AlgolaEditorFor(model => model.Number)
        @Html.HiddenFor(model => model.TimeStampTable)

        @Html.HiddenFor(model => model.CodCustomer)

        <div class="controls col-sm-9">
            <a href="javascript:void(0)" id="staticDialogCustomer">@Html.T(stringsGrid, "DialogTitle")</a>
            <a href="javascript:void(0)" id="staticDialog">@Html.T(stringsGrid, "DialogTitle")</a>
        </div>
        
        <div id="dialog-message" class="hide">

            <table id="gridArticle">
                <tr>
                    <td />
                </tr>
            </table>
            <div id="pagerArticle"></div>

        </div>
        
        <br />
        <br />
    
        <button type="button" onclick="Javascript:window.location.replace('@Url.Action("CreateProduct", "Product", new { Area = "Working" })');">
            <i class="icon-plus"></i>
            @Html.T(stringsGrid, "NewProduct")
        </button>        
        <button class="default" type="submit" name="@ViewBag.ActionMethod">
            <i class="icon-save"></i>
            @HttpContext.GetLocalResourceObject(stringsGrid, "Save")
        </button> 

    }

    <div id="_listDocumentProduct">
        @Html.Partial("_ListDocumentProduct", Model)
    </div>


</div>

<script type="text/javascript">

    var lastSel = -1;

    $(document).ready(

        function () {

            $('#DateDocument').datepicker({ dateFormat: "dd/mm/yy" });
//            var lastSel = -1;


            var myGrid = $("#gridArticle").jqGrid({
                url: '@url',
                 datatype: 'json',
                 colModel: [
                     { name: 'Id', label: 'OperationsCaption', key: true, width: 80, editable: false, hidden: true },
                     { name: 'CodCustomer', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "CodCustemerSupplierCaption")', width: 120, align: 'left', editable: false, hidden: false },
                    { name: 'Customer', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "CustomersCaption")', width: 120, align: 'left', editable: false, hidden: true },
                    { name: 'BusinessName', label: '@HttpContext.GetLocalResourceObject(stringsGrid, "BusinessNameCaption")', width: 120, align: 'left', editable: false, hidden: false },

                ],


                 pager: '#pagerArticle',

                 rowNum: 15,
                 rowList: [15, 20, 50],
                 viewrecords: true,
                 autowidth: false,

                 onSelectRow: function (id) {
                     if (id && id !== lastSel) {
                         myGrid.jqGrid('restoreRow', lastSel);
                         lastSel = id;
                     }
                 },

                 ondblClickRow: function (id, ri, ci) {
                     myGrid.jqGrid('editRow', id, {
                         keys: true,
                         oneditfunc: function () {
                             //...
                         },
                         aftersavefunc: function () {
                             $("#gridArticle").trigger("reloadGrid");
                         },
                         url: 'editUrl'
                     });
                     //editRow(rowid, keys, oneditfunc, successfunc, url, extraparam, aftersavefunc, errorfunc, afterrestorefunc);
                     return;
                 }

             });

            myGrid.jqGrid('navGrid', '#pagerArticle', { edit: false, add: false, del: false, search: true });
            myGrid.jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" });

        });

    $("#staticDialog").on('click', function (e) {
        e.preventDefault();

        var dialog = $("#dialog-message").dialog({
            width: 'auto',
            modal: true,
            title: '@Html.T(stringsGrid, "DialogSubTitle")',
            title_html: true,
            buttons: [
                {
                    text: '@Html.T(stringsGrid, "Cancel")',
                    "class": "btn btn-mini",
                    click: function () {
                    }
                },
                {
                    text: '@Html.T(stringsGrid, "Ok")',
                    "class": "btn btn-primary btn-mini",
                    click: function () {

                        var myGrid = $('#gridArticle'),
                            selRowId = myGrid.jqGrid('getGridParam', 'selrow'),
                            celValueCodCustemerSupplier = myGrid.jqGrid('getCell', lastSel, 'CodCustomer');

                        $('#CodCustomer').val(celValueCodCustemerSupplier);

                        var myGrid = $('#gridArticle'),
                            selRowId = myGrid.jqGrid('getGridParam', 'selrow'),
                            celValueCustemerSupplier = myGrid.jqGrid('getCell', lastSel, 'BusinessName');

                        $('#Customer').val(celValueCustemerSupplier);

                    }

                }
            ]
        });

           /**
           dialog.data( "uiDialog" )._title = function(title) {
               title.html( this.options.title );
           };
           **/
       });

    function reloadArticle() {
        $("#gridArticle").trigger("reloadGrid");
    }

</script>

