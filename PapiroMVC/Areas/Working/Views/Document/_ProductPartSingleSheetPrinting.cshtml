@using PapiroMVC.Validation
@using PapiroMVC.Models
@model PapiroMVC.Models.ProductPartSingleSheetPrinting

@{

    //string strings = "~/Areas/Working/Views/Document/Strings";
    //string stringsCod = "~/Views/Shared/Cuts";

    MakereadyPrintingSingleSheet g = (MakereadyPrintingSingleSheet)Model.GainPartOnPrinting.Makereadies.FirstOrDefault();
    var dCut = Model.GainPartOnPrinting.DCut ?? 0;

    var dCut1 = Model.GainPartOnPrinting.DCut1 ?? 0;
    var dCut2 = Model.GainPartOnPrinting.DCut2 ?? 0;

}


<script type="text/javascript">

    //this event is fired only the first time
    $(document).ready(function () {
        //        drawPrintingAndSheet(); //draw printing and work
    });

    function drawPrintingAndSheet() {

        var side1 = '@Model.PrintingFormat.GetSide1()';
        var side2 = '@Model.PrintingFormat.GetSide2()';

        side1 = side1.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });
        side2 = side2.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });

        var c_canvas = document.getElementById("printingSingleSheet");
        var context = c_canvas.getContext("2d");

        var zoom = 2.5;
        zoom = zoomGlo;

        var offsetX = 0;
        var offsetY = 0;

        var bv = '@g.TypeOfPerfecting';
        var maxG = '@g.PrintedShapes';

        drawSheet(context, side1, side2, offsetX, offsetY, zoom, 0, bv);

        var side1pr = '@Model.Part.FormatOpened.GetSide1()';
        var side2pr = '@Model.Part.FormatOpened.GetSide2()';

        side1pr = side1pr.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });
        side2pr = side2pr.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });

        var sideOnSide = '@g.SideOnSide';

        var gain1 = parseInt('@g.ShapeOnSide1');
        var gain2 = parseInt('@g.ShapeOnSide2');

        var dCut = '@dCut'.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });
        var dCut1 = '@dCut1'.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });
        var dCut2 = '@dCut2'.replace(/[\.,]/g, function (m) { return m == '.' ? ',' : '.' });

        drawPrinting(context, side1pr, side2pr, side1, side2, offsetX, offsetY, zoom, sideOnSide, gain1, gain2, maxG, dCut1, dCut2);

    }

</script>

@Html.Partial("_CommonScriptDraw")
