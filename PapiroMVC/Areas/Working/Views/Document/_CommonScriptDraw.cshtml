
<script type="text/javascript">

    function drawSheet(context, buyingFormatV, buyingFormatH, offsety, offsetx, zoom, bv) {

        buyingFormatH *= zoom;
        buyingFormatV *= zoom;

        var passo = 10 * zoom;

        context.beginPath();

        context.strokeStyle = "#eee";
        context.stroke();

        context.beginPath();
        context.rect(offsetx + 0, offsety + 0, buyingFormatH, buyingFormatV);
        context.strokeStyle = "rgb(10, 10, 10)";
        context.stroke();

        if (bv != '') {
            context.beginPath();
            if (bv = '12') {
                context.rect(offsetx + 0, offsety + 0, buyingFormatH, buyingFormatV / 2);
            }
            else {
                context.rect(offsetx + 0, offsety + 0, buyingFormatH / 2, buyingFormatV);
            }
            context.fillStyle = 'yellow';
            context.fill();
        }

    }


    function drawRepass(context, buyingFormatV, buyingFormatH, offsety, offsetx, zoom) {

        buyingFormatH *= zoom;
        buyingFormatV *= zoom;


        context.beginPath();

        context.strokeStyle = "#eee";
        context.stroke();

        context.beginPath();

        context.rect(offsetx + 0, offsety + 0, buyingFormatH, buyingFormatV);
        context.strokeStyle = "#b0c2f7";
        context.stroke();

        context.beginPath();
        context.fillStyle = "#b0c2f7";
        context.globalAlpha = 0.5; // Half opacity
        context.fillRect(offsetx + 0, offsety + 0, buyingFormatH, buyingFormatV);
        context.stroke();

        //alert(buyingFormatH + " " + buyingFormatV);
    }


    function drawPrinting(context, printingFormatV, printingFormatH, SheetV, SheetH, pOffsetx, pOffsety, zoom, sideOnside, gainOnSide1, gainOnSide2, maxGain, dCut1, dCut2) {

        if (maxGain == 0) {
            maxGain = gainOnSide1 * gainOnSide2;
        }


        var offsetx = pOffsetx;
        var offsety = pOffsety;
        
        printingFormatH *= zoom;
        printingFormatV *= zoom;

        dCut1 *= zoom;
        dCut2 *= zoom;

        SheetH *= zoom;
        SheetV *= zoom;

        pOffsetx *= zoom;
        pOffsety *= zoom;

        var passo = 10 * zoom;

        context.width = context.width;

        context.beginPath();

        context.strokeStyle = "#eee";
        context.stroke();

        context.beginPath();

        var countShape = 0;

        if (sideOnside == 'True') {

            offsetx = (SheetH + dCut2 - ((printingFormatH + dCut2) * gainOnSide2)) / 2
            offsety = (SheetV + dCut1 - ((printingFormatV + dCut1) * gainOnSide1)) / 2

            offsetx = offsetx + pOffsetx;
            offsety = offsety + pOffsety;

            for (var j = 0, countShape = 0; j < gainOnSide1 && countShape < maxGain; j++) {
                for (var i = 0; i < gainOnSide2 && countShape < maxGain; i++, countShape++) {
                    context.rect(offsetx + (printingFormatH + dCut2) * i, offsety + (printingFormatV + dCut1) * j, printingFormatH, printingFormatV);
                }
            }
        }
        else {

            offsetx = (SheetH + dCut1 - ((printingFormatV + dCut1) * gainOnSide2)) / 2
            offsety = (SheetV + dCut2 - ((printingFormatH + dCut2) * gainOnSide1)) / 2

            offsetx = offsetx + pOffsetx;
            offsety = offsety + pOffsety;

            for (var j = 0, countShape = 0; j < gainOnSide2 && countShape < maxGain; j++) {
                for (var i = 0; i < gainOnSide1 && countShape < maxGain; i++, countShape++) {
                    context.rect(offsetx + (printingFormatV + dCut1) * j, offsety + (printingFormatH + dCut2) * i, printingFormatV, printingFormatH);
                }
            }
        }

        context.strokeStyle = "rgb(10, 10, 10)";
        context.stroke();

    }


    function drawPrintingOnShort(context, printingFormatV, printingFormatH, SheetV, SheetH, offsety, offsetx, zoom, sideOnside, gainOnSide1, gainOnSide2, maxGain, dCut1, dCut2) {

        if (maxGain == 0) {
            maxGain = gainOnSide1 * gainOnSide2;
        }

        printingFormatH *= zoom;
        printingFormatV *= zoom;

        dCut1 *= zoom;
        dCut2 *= zoom;

        SheetH *= zoom;
        SheetV *= zoom;

        var passo = 10 * zoom;

        context.width = context.width;

        context.beginPath();

        context.strokeStyle = "#eee";
        context.stroke();

        context.beginPath();

        var countShape = 0;

        if (sideOnside == 'True') {

            offsetx = (SheetH + dCut2 - ((printingFormatH + dCut2) * gainOnSide2)) / 2
            offsety = (SheetV + dCut1 - ((printingFormatV + dCut1) * gainOnSide1)) / 2

            for (var i = 0, countShape = 0; i < gainOnSide2 && countShape < maxGain; i++) {
                for (var j = 0; j < gainOnSide1 && countShape < maxGain; j++, countShape++) {
                    context.rect(offsetx + (printingFormatH + dCut2) * i, offsety + (printingFormatV + dCut1) * j, printingFormatH, printingFormatV);
                }
            }
        }
        else {

            offsetx = (SheetH + dCut1 - ((printingFormatV + dCut1) * gainOnSide2)) / 2
            offsety = (SheetV + dCut2 - ((printingFormatH + dCut2) * gainOnSide1)) / 2

            for (var j = 0, countShape = 0; j < gainOnSide2 && countShape < maxGain; j++) {
                for (var i = 0; i < gainOnSide1 && countShape < maxGain; i++, countShape++) {
                    context.rect(offsetx + (printingFormatV + dCut1) * j, offsety + (printingFormatH + dCut2) * i, printingFormatV, printingFormatH);
                }
            }

        }

        context.strokeStyle = "rgb(10, 10, 10)";
        context.stroke();

    }

</script>
