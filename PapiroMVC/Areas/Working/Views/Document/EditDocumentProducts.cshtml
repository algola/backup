@using PapiroMVC.Validation
@model List<PapiroMVC.Models.DocumentProduct>

@{
    string strings = "~/Areas/Working/Views/Document/Strings";
    ViewBag.Title = "EditDocumentProducts";
}

@section title{
    @Html.T(strings, "Document")
}

@section description{
    @Html.T(strings, "EditDocumentProductsDesc")
}

@section specificPlugInStyle {

    <link rel="stylesheet" href="~/Content/acetheme/assets/css/jquery-ui.min.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/ui.jqgrid.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/datepicker.css" />
    @*<link rel="stylesheet" href="~/Content/tabHidden.css" />*@
}

@section specificPluginScript {
    <script src="~/Content/acetheme/assets/js/jqGrid/jquery.jqGrid.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jqGrid/i18n/grid.locale-en.js"></script>
    <script src="~/Scripts/jqgridHelper.js"></script>

    <script src="~/Content/acetheme/assets/js/jquery-ui.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jquery.autosize-min.js"></script>
    <script src="~/Content/acetheme/assets/js/jquery.ui.touch-punch.min.js"></script>

    <script src="~/Scripts/autocomplete.js"></script>
}

<div class="row">
    <div class="alert alert-block alert-success">
        @if (Model.FirstOrDefault().Document.TypeOfDocument == PapiroMVC.Models.Document.DocumentType.Estimate)
        {
            <button class="btn btn-warning" type="button" onclick="Javascript:window.location.replace('@Url.Action("EditEstimate", "Document", new { area = "Working", id = Model.FirstOrDefault().Document.CodDocument })');">
                <i class="icon-undo bigger-125"></i>
                @Html.T(strings, "Back")
            </button>
        }
        @Html.Label(Model.First().Product.ProductName)
    </div>
</div>


<div class="tabbable">

    @*<h4 class="lighter">

            @if (Model.FirstOrDefault().Document.TypeOfDocument == PapiroMVC.Models.Document.DocumentType.Estimate)
            {
                @Html.ActionLink("<-- Preventivo", "EditEstimate", "Document", new { area = "Working", id = Model.FirstOrDefault().Document.CodDocument }, null);
            }

        </h4>*@

    <ul class="nav nav-tabs padding-12 tab-color-blue background-blue" id="myTabo">

        @*<ul class="nav nav-tabs" id="myTabo">*@

        @for (int i = 0; i < Model.Count; i++)
        {
            
            //uso questo per  
            Model[i].IndexOf = i;
            
            if (i == 0)
            {
                <li class="active">

                    <a data-toggle="tab" href="#frame@((i + 1).ToString())" onclick="resize@(Model[i].CodDocumentProduct.Replace("-", "_"))();">
                        <i class="blue icon-stackexchange bigger-110"></i>

                        @if (Model[i].Quantity != null)
                        {
                            @String.Format("{0:n0}",Model[i].Quantity)
                        }
                        else
                        {
                            @Html.Label("****Quantità non impostata");
                        }

                    </a>
                </li>
            
            }
            else
            {
                <li>
                    <a data-toggle="tab" href="#frame@((i + 1).ToString())" onclick="resize@(Model[i].CodDocumentProduct.Replace("-", "_"))();">
                        <i class="blue icon-stackexchange bigger-110"></i>

                        @if (Model[i].Quantity != null)
                        {
                            @String.Format("{0:n0}", Model[i].Quantity)
                        }
                        else
                        {
                            @Html.Label("****Quantità non impostata");
                        }
                    </a>
                </li>
            }
        }

    </ul>

</div>

<div id="container-grid"> 
    <div class="padding-5 no-padding-left no-padding-right">
        <div class="tab-content padding-0">

            <!-- DocumentProducts -->
            @for (int i = 0; i < Model.Count; i++)
            {
                ViewBag.IndexPart = i;

                if (i == 0)
                {
                    <div class="tab-pane in active" id="frame@((i + 1).ToString())">
                        @*griglia dei costi di questa quantità*@
                        @Html.Partial("_Costs", Model[i])
                        <div id="documentProduct@(Model[i].CodDocumentProduct)">
                            @Html.EditorFor(model => model[i])
                            @*
                                <div class="form-group" id="dlgQta@(Model[i].CodDocumentProduct)" hidden="hidden">
                                    <div class="controls">
                                        <input type="text" id="copyQta@(Model[i].CodDocumentProduct)" placeholder="Nuova Quantità">
                                    </div>
                                </div>
                            *@
                        </div>
                    </div>
                }
                else
                {
                    <div class="tab-pane" id="frame@((i + 1).ToString())">
                        @*griglia dei costi di questa quantità*@
                        @Html.Partial("_Costs", Model[i])

                        <div id="documentProduct@(Model[i].CodDocumentProduct)">


                            @*                            @Html.Partial("_DocumentProduct", Model[i])*@
                            @Html.EditorFor(model => model[i])
                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

@Html.Partial("_CostsCommonScript")

<script>

    $(function () {

        $('a[data-toggle="tab"]').on('shown.bs.tab', function () {
            //save the latest tab; use cookies if you like 'em better:
            localStorage.setItem('lastTab@(Model.First().CodDocumentProduct)', $(this).attr('href'));
        });

        //go to the latest tab, if it exists:
        var lastTab = localStorage.getItem('lastTab@(Model.First().CodDocumentProduct)');

        if (lastTab) {
            $('a[href=' + lastTab + ']').tab('show');
        }
        else {
            // Set the first tab if cookie do not exist
            $('a[data-toggle="tab"]:first').tab('show');
        }
    });

</script>