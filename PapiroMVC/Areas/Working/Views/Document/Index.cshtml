@using Mvc.HtmlHelpers
@using PapiroMVC.Validation
@using PapiroMVC.Models


@{
    string strings = "~/Areas/Working/Views/Document/Strings";

    string stringsProd = "~/Views/Shared/Strings";


    //Prendo il titolo dal menù
    ViewBag.Title = Html.T(strings, "ListEstimate");

    //Load menu product
    Html.Action("LoadMenuProduct", "Product", new { area = "Working" });

    List<MenuProduct> menuProd = (List<MenuProduct>)TempData["MenuProd"];//ViewBag.MenuProd;

    var categories = menuProd != null ? menuProd.Select(x => new MyStruct { CodCategory = x.CodCategory, IndexOfCategory = x.IndexOfCategory.ToString() }).Distinct().OrderBy(y => y.IndexOfCategory).ToList() : null;
    List<MenuProduct> selectedMenuProd;


}

@*
    <div class="alert alert-block alert-success">
        <button type="button" class="close" data-dismiss="alert">
            <i class="icon-remove"></i>
        </button>

        <i class="icon-ok green"></i>
        @Html.T(strings, "AlertWorkingArea")
    </div>

    <p>
        @Html.T(strings, "Message")
    </p>
    <div class="vspace"></div>

*@

<div id="well no-padding-left no-padding-rigth">
    <span class="span12">
        <!--/span--> @Html.Partial("_NewProductCommand", new NewProductCommand())
    </span>
</div>



@foreach (var item in categories)
{

    selectedMenuProd = menuProd.FindAll(x => x.CodCategory == item.CodCategory && !x.Hidden.Value).ToList();
    foreach (var menuItem in selectedMenuProd)
    {
        try
        {
            <div class="span3">
                <div class="widget-box pricing-box">
                    <div class="widget-header header-color-orange">
                        <h5 class="bigger lighter">@Html.T(stringsProd, "CodCat" + item.CodCategory)</h5>
                    </div>

                    <div class="widget-body">
                        <div class="widget-main pagination-centered">

                            <div style="position: relative; left: 0; top: 0;">
                                <img src="~/Content/ProductImage/@(menuItem.CodMenuProduct).png" style="position: relative; top: 0; left: 0;" />
                                <img src="~/Content/ProductImage/beta-stamp.png" style="position: absolute; top: 0px; left: 0px;" />
                            </div>

                            <a href="@(Url.Action("NewProductNewEstimateById", "Document", (object)new { id = menuItem.CodMenuProduct.ToString(), area = "Working" }))" class="btn btn-block btn-inverse">
                                <span>@Html.T(stringsProd, "CodMenuProduct" + menuItem.CodMenuProduct)</span>
                            </a>


                            @*<a href="@(Url.Action("CreateProduct", "Product", (object)new { id = menuItem.CodMenuProduct.ToString(), area = "Working" }))" class="btn btn-block btn-inverse">
                                    <span>@Html.T(stringsProd, "CodMenuProduct" + menuItem.CodMenuProduct)</span>
                                </a>*@
                        </div>
                    </div>
                </div>
            </div>

        }
        catch (Exception)
        {
            Console.WriteLine(menuItem.CodMenuProduct);
            throw;
        }
    }
}


@Html.Action("LoginInvite", "Account", new { area = "Account" }).If(!User.Identity.IsAuthenticated)



<style>
    .algoAver {
        position: relative;
        top: -150px;
        left: 0;
        width: 30%;
    }
</style>

@section title{
    @Html.T(strings, "Documents")
}

@section description{
    @Html.T(strings, "DocumentsDesc")
}

@section specificPlugInStyle {
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/jquery-ui-1.10.3.full.min.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/datepicker.css" />
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/ui.jqgrid.css" />

}

@section specificPluginScript {
    <script src="~/Content/acetheme/assets/js/date-time/bootstrap-datepicker.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jqGrid/jquery.jqGrid.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jqGrid/i18n/grid.locale-en.js"></script>
    <script src="~/Content/acetheme/assets/js/jquery-ui-1.10.3.full.min.js"></script>
    <script src="~/Content/acetheme/assets/js/jquery.autosize-min.js"></script>
}

@section ScriptS{
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(function () {
        document.getElementById("createEstimateSlidebar").className = "active open";
    });
</script>