@using PapiroMVC.Validation
@model PapiroMVC.Models.RecoveryPasswordModel
@{
    string strings = "~/Areas/Account/Views/Account/Strings";

    var err = ViewData.ModelState.FirstOrDefault(x => x.Key == "PersError");

        //if (err.Key != null)
        //{
        //    ViewData.ModelState.AddModelError(string.Empty, Html.T(strings, err.Value.Errors[0].ErrorMessage));
        //}        

        }
<div id="status">
@{
    try
    {
        if ((bool)TempData["EmailError"] == true)
        {
            
        
    <div class="alert alert-block alert-error">
        <button type="button" class="close" data-dismiss="alert">
            <i class="icon-remove"></i>
        </button>

        <i class="icon-ok green"></i>
        ***Email non valida o non inserita nel sistema
    </div>

        }
        else
        {
    <div class="alert alert-block alert-success">
        <button type="button" class="close" data-dismiss="alert">
            <i class="icon-remove"></i>
        </button>

        <i class="icon-ok green"></i>
        @Html.T(strings, "RecoveryPasswordMessage")
    </div>
        }
    }
    catch (Exception e)
    {
        ViewBag.Message = "";
        Console.WriteLine(e.Message);
    }
  
}



    @Scripts.Render("~/bundles/autocomplete")

    @using (Ajax.BeginForm("RecoveryPassword", "Account", new AjaxOptions
{
    UpdateTargetId = "status",
    OnBegin = "showProcessingMsg",
    OnComplete = "hideProcessingMsg",
    OnSuccess = "OnSuccess"
}, new { @class = "form-horizontal" }))
    {
        @Html.ValidationSummary(true)

        
        @Html.AlgolaEditorFor(m => m.Email)
        <br />              
    
        <p>

            @Html.ActionLinkButton(Html.T(strings, "Cancel"), "Index", "Home", null, "icon-remove bigger-125", "btn btn-warning")

            <button class="btn btn-primary" type="submit">
                <i class="icon-save bigger-125"></i>
                @Html.T(strings, "RecoveryPasswordTitle")
            </button>

        </p>
    }
</div>
