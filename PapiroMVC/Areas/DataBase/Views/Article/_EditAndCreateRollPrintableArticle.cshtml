@model PapiroMVC.Models.RollPrintableArticleViewModel
@using PapiroMVC.Validation

@{
    string strings = "~/Areas/DataBase/Views/Article/Strings";
}

<div id="status"> 
    
 @*   @Scripts.Render("~/bundles/jqueryval") *@
@using (Ajax.BeginForm("Action", "Article", new AjaxOptions { UpdateTargetId = "status", OnBegin = "ShowProcessingMsg", OnComplete = "HideProcessingMsg", OnSuccess="OnSuccess" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>RollPrintableArticleViewModel</legend>

        @Html.HiddenFor(model => model.Article.TimeStampTable)
        
        @Html.HiddenFor(model => model.Article.CodArticle)
        @Html.HiddenFor(model => model.Article.ArticleName)

        @Html.AlgolaAutocompleteFor(model =>  model.Article.TypeOfMaterial,"TypeOfMaterialAutoComplete","Article")
        @Html.AlgolaAutocompleteFor(model =>  model.Article.NameOfMaterial,"NameOfMaterialAutoComplete","Article")

        @Html.AlgolaAutocompleteFor(model =>  model.Article.Color,"ColorAutoComplete","Article")
        @Html.AlgolaAutocompleteFor(model =>  model.Article.Weight,"WeightAutoComplete","Article")
        
        @Html.AlgolaAutocompleteFor(model =>  model.Article.Width,"WidthAutoComplete","Article")
        @Html.AlgolaAutocompleteFor(model =>  model.Article.MqForafait,"MqForafaitAutoComplete","Article")

        @Html.AlgolaAutocompleteFor(model =>  model.Article.Hand,"HandAutoComplete","Article")

        @Html.AlgolaAutocompleteFor(model => model.SupplierMaker,"SupplierBusinessNameAutoComplete","CustomerSupplier")
        @Html.AlgolaAutocompleteFor(model => model.SupplyerBuy,"SupplierBusinessNameAutoComplete","CustomerSupplier")

        @Html.HiddenFor(model =>  model.Article.UnitOfMeasure)

    </fieldset>

    <div id='_RollPrintableArticleStandardCost'>
        @Html.Partial("_RollPrintableArticleStandardCost", Model)
    </div>
    <br />
    <p>
        <button type="button" onclick="Javascript:window.location.replace('@Url.Action("IndexRollPrintableArticle", "Article", new {Area="Database"})');">            
           <i class="icon-arrow-left"></i>
             @HttpContext.GetLocalResourceObject(strings, "Cancel")
        </button>

        <button class="default" type="submit" name="@ViewBag.ActionMethod">
                 <i class="icon-save"></i>    
                 @HttpContext.GetLocalResourceObject(strings, "Save")
        </button>                        
        
        @if (ViewBag.ActionMethod != "CreateRollPrintableArticle")               
        {
            <button class="button" type="submit" name="CreateRollPrintableArticle">
                 <i class="icon-save"></i>    
                 @HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")
            </button>
        }
    </p>
    
}

 </div>



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    