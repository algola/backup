@using PapiroMVC.Validation
@{
    string strings = "~/Areas/DataBase/Views/Article/Strings";
    ViewBag.Title = (string)HttpContext.GetLocalResourceObject(strings, "TitleIndex");

}

<script type="text/javascript">
    function editArticle(cellvalue, options, rowobject) {
        var link = '@Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "Edit"), "Edit", new {id= "-1"},new {@class="tbutton smalledit"})';

        return link.replace("-1", cellvalue);
    }


    function typeOfMov(cellvalue, options, rowobject) {

        var link = "type";
        var unload = '@HttpContext.GetLocalResourceObject(strings, "UnloadType")'; //0
        var load = '@HttpContext.GetLocalResourceObject(strings, "LoadType")'; //1
        var order = '@HttpContext.GetLocalResourceObject(strings, "OrderType")'; //2
        var reserve = '@HttpContext.GetLocalResourceObject(strings, "ReserveType")';

        if (cellvalue == "0")
            return link.replace("type", unload);

        if (cellvalue == "1")
            return link.replace("type", load);

        if (cellvalue == "2")
            return link.replace("type", order);

        if (cellvalue == "3")
            return link.replace("type", reserve);


        return link;
    }

    function editWarehouse(cellvalue, options, rowobject) {

        var link2 = '@Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "Movments"), "EditArticleOnlyMov", new { id = "-1" }, new { @class = "tbutton smalledit" })';
        return link2.replace("-1", cellvalue);

    }


    function typeOfArticle(cellvalue, options, rowobject) {

        var link = "type";
        var sheet = '@HttpContext.GetLocalResourceObject(strings, "SheetPrintableArticleType")';
        var roll = '@HttpContext.GetLocalResourceObject(strings, "RollPrintableArticleType")';
        var object = '@HttpContext.GetLocalResourceObject(strings, "ObjectPrintableArticleType")';
        var rigid = '@HttpContext.GetLocalResourceObject(strings, "RigidPrintableArticleType")';

        if (cellvalue == "SheetPrintableArticle")
            return link.replace("type", sheet);

        if (cellvalue == "ObjectPrintableArticle")
            return link.replace("type", object);

        if (cellvalue == "RollPrintableArticle")
            return link.replace("type", roll);

        if (cellvalue == "RigidPrintableArticle")
            return link.replace("type", rigid);

        return link;
    }

    $("#btnDialogChange").click(function () {

        hideProcessingMsg();

        var grid = jQuery("#list");
        var ids = grid.jqGrid('getGridParam', 'selarrrow');

        hideProcessingMsg();

        if (ids.length > 0) {

            $("#dialog-change").removeClass("hide").dialog({
                height: 250,
                modal: true,
                buttons: {
                    '@Html.T(strings,"DeleteCancel")': function () {
                        $(this).dialog('close');
                    },
                    '@Html.T(strings,"DeleteOk")': function () {
                        sendChanges();
                        hideProcessingMsg();
                        $(this).dialog('close');
                    }
                }
            });
            $("#dialog-change").dialog('option', 'width', 500);
            hideProcessingMsg();
        } else {

            $("#dialog-warning-selection").removeClass("hide").dialog({
                height: 280,
                modal: true,
                buttons: {
                    '@Html.T(strings,"DeleteOk")': function () {
                        hideProcessingMsg();
                        $(this).dialog('close');
                    }
                }
            });
            hideProcessingMsg();
        }

    });



















    $("#delete").click(function () {
        var grid = jQuery("#list");
        var ids = grid.jqGrid('getGridParam', 'selarrrow');
        if (ids.length > 0) {

            hideProcessingMsg();

            $("#dialog-confirm").removeClass("hide").dialog({
                width: 'auto',
                heigth: 'auto',
                modal: true,
                buttons: {
                    '@Html.T(strings,"DeleteCancel")': function () {
                        $(this).dialog('close');
                    },
                    '@Html.T(strings,"DeleteOk")': function () {
                        //alert("Confirm");
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("DeleteArticle","Article",null)',
                            data: {
                                ids: JSON.stringify(ids)
                            },
                            dataType: "json",
                            success: function (msg) {
                                //if (msg.isRedirect) {
                                //    window.location.href = msg.redirectUrl;
                                //}
                                $("#list").trigger("reloadGrid");
                            },
                            error: function (res, status, exeption) {
                                $("#list").trigger("reloadGrid");

                            }
                        });

                        hideProcessingMsg();
                        $(this).dialog('close');
                    }
                }
            });
            hideProcessingMsg();
        }
    });

</script>

