@model PapiroMVC.Models.RollPrintableArticleAutoChanges
@using Mvc.HtmlHelpers
@using MvcContrib.UI.Grid
@using PapiroMVC.Validation

@{
    string strings = "~/Areas/DataBase/Views/Article/Strings";
    ViewBag.Title = (string)HttpContext.GetLocalResourceObject(strings, "TitleIndex");

    string[] typeOfArticle = new string[4];
    typeOfArticle[0] = (string)HttpContext.GetLocalResourceObject(strings, "SheetPrintableArticleType");
    typeOfArticle[1] = (string)HttpContext.GetLocalResourceObject(strings, "RollPrintableArticleType");
    typeOfArticle[2] = (string)HttpContext.GetLocalResourceObject(strings, "ObjectPrintableArticleType");
    typeOfArticle[3] = (string)HttpContext.GetLocalResourceObject(strings, "RigidPrintableArticleType");
}

<h2>@ViewBag.Title</h2>
<br />

@(Html.jqGrid("RollPrintableArticleGrid")
    
    .setCaption((string)HttpContext.GetLocalResourceObject(strings, "RollPrintableArticleGridCaption"))
    .setMultiSelect(true)
        // columns
    .addColumn(new Column("Id")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "OperationsCaption"))
        .setWidth(40)
        .setCustomFormatter("editArticle")
        .setSortable(false))
    .addColumn(new Column("CodArticle")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "CodArticleCaption"))
        .setWidth(80)
        .setSortable(true))

    .addColumn(new Column("TypeOfMaterial")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "TypeOfMaterialCaption"))        
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("NameOfMaterial")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "NameOfMaterialCaption"))
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("Color")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "ColorCaption"))
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("Weight")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "WeightCaption"))
        .setWidth(45)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("Width")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "WidthCaption"))
        .setWidth(45)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("SupplierName")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "SupplierNameCaption"))
        .setSearch(true)
        .setWidth(150))
        
    .addColumn(new Column("CostPerMq")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "CostPerMqCaption"))
        .setTitle(false)
        .setEditable(true)
        .setSearch(true)
        .setWidth(45)
        .setAlign(Align.right))

    .addColumn(new Column("CostPerMl")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "CostPerMlCaption"))
        .setSearch(true)
        .setWidth(45)
        .setAlign(Align.right))
        
    .setUrl(Url.Action("RollPrintableArticleList", "Article"))

    .setHeight(300)
    .setRowNum(20)
    .setRowList(new int[] { 10, 20, 50, 100 })
    .setPager("CustomGridAccountPager")
    .setPrint(true)
    .setLoadText("")
    .setAutoWidth(true)
    .setSearchToolbar(true)
    .setViewRecords(true)

    // error handler
    .onLoadError((string)HttpContext.GetLocalResourceObject(strings, "ErrorLoading"))

    // render the html
    .Render()
)

@Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "CreateRollPrintableArticle"), "CreateRollPrintableArticle")
@Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "WizardRollPrintableArticle"), "WizardRollPrintableArticle")

<a href="javascript:void(0);" id="showHiderollPrintableArticleAutoChanges">@HttpContext.GetLocalResourceObject(strings, "AutoCahngesCaption")</a>

<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        //when document is ready first: hide all div optional operation
        $("#slidingDivOption").hide();

        //and show each command to toggle div
        $("#showHiderollPrintableArticleAutoChanges").show();

        $('#showHiderollPrintableArticleAutoChanges').click(function () {
            $("#slidingDivOption").slideToggle();
        });
    });
</script>

<div id="slidingDivOption" class="slidingDiv">

    <div id="rollPrintableArticleAutoChanges" class="slidingDiv">            
        @Html.Partial("_RollPrintableArticleAutoChanges", Model)
    </div>

    @Html.Partial("_MsgProcessOk")
   
</div>


<div id="formresults"></div>

<script type="text/javascript">

    //this function send data to actionmethod of specify control
    //data are read from jqgrid by using grid.jqGrid('getGridParam', 'selarrrow');
    //jQuery("#sendRollAutomaticallyChanges").click(function () {

    function sendRollAutomaticallyChanges() {

        ClearValidationErrors();

        var grid = jQuery("#RollPrintableArticleGrid");
        var ids = grid.jqGrid('getGridParam', 'selarrrow');

        //data are collected into
        var allData = {
            Id: ids,
            //read from specify item
            SupplierMaker: document.getElementById("SupplierMaker").value,
            SupplyerBuy: document.getElementById("SupplyerBuy").value,
            MqForafait: document.getElementById("MqForafait").value,
            Hand: document.getElementById("Hand").value,
            CostPerMl: document.getElementById("CostPerMl").value,
            CostPerMq: document.getElementById("CostPerMq").value,
            NoBv: document.getElementById("NoBv").value
        };

        //Converte un valore JavaScript in una stringa JSON (JavaScript Object Notation).
        var dataToPass = JSON.stringify(allData);
        $.ajax({
            type: "POST",
            url: "@Url.Action("RollAutomaticallyChanges", "Article")",
            dataType: "json",
            data: dataToPass,
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                $("msgProcessOk").center();
                document.getElementById("msgProcessOk").style.display = 'block';
                // There is no problem with process
                if (data.Valid) {
                    return;
                }
            },

            error: function (xhr) {
                document.getElementById("msgProcessError").style.display = 'block';
                //                ReloadForm(xhr);
            }
        });
    }

    jQuery.fn.center = function () {
        this.css("position", "absolute");
        this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                                                    $(window).scrollTop()) + "px");
        this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                                                    $(window).scrollLeft()) + "px");
        return this;
    }

    function ReloadForm(xhr) {
        $('#rollPrintableArticleAutoChanges').html(xhr.responseText);
    }
    function ClearValidationErrors() {
        $('.validation-summary-errors').html('');
        $('.input-validation-error').removeClass('input-validation-error');
        $('.field-validation-error').remove();
    }

</script>