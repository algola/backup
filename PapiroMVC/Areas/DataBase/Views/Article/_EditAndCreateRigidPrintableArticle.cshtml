@model PapiroMVC.Models.RigidPrintableArticleViewModel
@using PapiroMVC.Validation

@{
    string strings = "~/Areas/DataBase/Views/Article/Strings";
}

<div id="status">

    @Scripts.Render("~/bundles/autocomplete")

    @using (Ajax.BeginForm("Action", "Article", new AjaxOptions
    {
        UpdateTargetId = "status",
        OnBegin = "showProcessingMsg",
        OnComplete = "hideProcessingMsg",
        OnSuccess = "OnSuccess"
    }, new { @class = "form-horizontal" }))
    {
        <div class="row">
            <div class="col-xs-12">

                @Html.ValidationSummary(true)


                @Html.HiddenFor(model => model.Article.TimeStampTable)

                @Html.HiddenFor(model => model.Article.CodArticle)
                @Html.HiddenFor(model => model.Article.ArticleName)

                @Html.AlgolaAutocompleteFor(model => model.Article.TypeOfMaterial, "TypeOfMaterialAutoComplete", "Article")
                @Html.AlgolaAutocompleteFor(model => model.Article.NameOfMaterial, "NameOfMaterialAutoComplete", "Article")

                @Html.AlgolaAutocompleteFor(model => model.Article.Color, "ColorAutoComplete", "Article")

                @Html.AlgolaAutocompleteFor(model => model.Article.Weight, "WeightAutoComplete", "Article")
                @Html.AlgolaAutocompleteFor(model => model.Article.Format, "FormatAutoComplete", "Article")

                @Html.AlgolaAutocompleteFor(model => model.Article.Thikness, "ThiknessAutoComplete", "Article")
                @Html.EditorFor(model => model.Article.ToNexMq)
                @Html.AlgolaAutocompleteFor(model => model.Article.FromMinFormat, "FromMinFormatComplete", "Article")


                @Html.AlgolaAutocompleteFor(model => model.SupplierMaker, "SupplierBusinessNameAutoComplete", "CustomerSupplier")
                @Html.AlgolaAutocompleteFor(model => model.SupplyerBuy, "SupplierBusinessNameAutoComplete", "CustomerSupplier")

                @Html.HiddenFor(model => model.Article.UnitOfMeasure)


                <div id='_RigidPrintableArticleStandardCost'>
                    @Html.Partial("_RigidPrintableArticleStandardCost", Model)
                </div>
                <br />
                <div class="controls col-sm-9 col-sm-offset-3">

                    <button class="btn btn-warning" type="button" onclick="Javascript:window.location.replace('@Url.Action("IndexRigidPrintableArticle", "Article", new { Area = "Database" })');">
                        <i class="icon-arrow-left"></i>
                        @HttpContext.GetLocalResourceObject(strings, "Cancel")
                    </button>

                    <button class="default btn btn-primary" type="submit" name="@ViewBag.ActionMethod">
                        <i class="icon-save"></i>
                        @HttpContext.GetLocalResourceObject(strings, "Save")
                    </button>

                    @if (ViewBag.ActionMethod != "CreateRigidPrintableArticle")
                    {
                        <input class="btn" type="submit" name="CreateRigidPrintableArticle" value='@HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")' />
                    }

                </div>

            </div>
        </div>

    }

</div>
