@*using PapiroMVC.Models.Resources.TypeOfTaskAndCodTypeOfTask*@
@using PapiroMVC.Validation
@model List<PapiroMVC.Models.TaskEstimatedOn>

@{
    string strings = "~/Areas/DataBase/Views/TaskExecutor/Strings";
    ViewBag.Title = (string)HttpContext.GetLocalResourceObject(strings, "TaskEstimatedOnRun");

    //we want ot use different resource only to share it between areas and parts
    string stringsCod = "~/Views/Shared/TypeOfTaskAndCodTypeOfTask";
}

<div id="status"> 

@Scripts.Render("~/bundles/jqueryval")
@using (Ajax.BeginForm("TaskEstimatedOnRun", "TaskExecutor", new {returnUrl = ViewBag.ReturnUrl},
    new AjaxOptions { UpdateTargetId = "status", OnBegin = "showProcessingMsg", OnComplete = "hideProcessingMsg", OnSuccess = "OnSuccess" }, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    
        <div class="page-control" data-role="page-control">

            <span class="menu-pull"></span> 
            <div class="menu-pull-bar"></div>
            <!-- Tabs -->
            <ul>

                <!-- parts -->
                @for (int i = 0; i < Model.Count; i++)
                { 
                    if (i==0)
                    {                        
                        <li class="active"><a href="#frame1">@Html.T(stringsCod,"Cod" + Model[i].CodOptionTypeOfTask)</a></li>
                    }
                    else
                    {
                        <li><a href="#frame@((i + 1).ToString())">@Html.T(stringsCod,"Cod" + Model[i].CodOptionTypeOfTask)</a></li>
                    }
                }

            </ul>

            <!-- Tabs content -->
            <div class="frames">
                <!-- parts -->
                @for (int i = 0; i < Model.Count; i++)
                {
                    
                    ViewBag.IndexTaskEstimatedOn = i;
                                                            
                    if (i==0)
                    {
                    <div class="frame active" id="frame@((i+1).ToString())">
                        @Html.EditorFor(model => model[i])           
                    </div>
                    }             
                    else
                    {
                        <div class="frame" id="frame@((i+1).ToString())">
                        @Html.EditorFor(model => model[i])           
                    </div>

                    }
                }
            </div>
            
        </div>
         <br />   
 
    @ViewBag.CodTypeOfTask
    
            <p>
                <button class="btn btn-warning" type="button" onclick="Javascript:window.location.replace('@Url.Action(ViewBag.ReturnUrl, "TaskExecutor", new { Area = "Database", codTypeOfTask = ViewBag.CodTypeOfTask })');">
                    <i class="icon-arrow-left"></i>
                    @HttpContext.GetLocalResourceObject(strings, "Cancel")
                </button>                
                
                <button class="default btn btn-primary" type="submit">
                    <i class="icon-save"></i>
                    @HttpContext.GetLocalResourceObject(strings, "Save")
                </button>  

            </p>}

    </div>


@section breadcrumb {

}

@section title{
    @ViewBag.Title
}

@section description{
    @ViewBag.Desc
}

@section specificPlugInStyle {
    <link rel="stylesheet" href="~/Content/acetheme/assets/css/ui.jqgrid.css" />
}

@section specificPluginScript {
    <script src="~/Content/acetheme/assets/js/jquery-ui.min.js"></script>
}

@section ScriptS{
    @Scripts.Render("~/bundles/jqueryval")
}

@*Put indicator on sidebar*@
@Html.Partial("_OnSidebar", ((string)ViewBag.ReturnCodTypeOfTask ?? "A").ToLower())