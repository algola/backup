@model PapiroMVC.Models.LithoSheet
@using PapiroMVC.Validation

@{
    
    string strings = "~/Areas/DataBase/Views/TaskExecutor/Strings";
//    ViewBag.PrintingUnit = new System.Dynamic.ExpandoObject();
//    string[] printingUnitName = {"1","2","3","4","5","6","7","8","9","10","11","12"};
    int[] printingUnitName = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
//    ViewBag.PrintingUnit.PrintingUnitName = new List<string>(printingUnitName);
}

@using (Html.BeginForm("Action", "TaskExecutor"))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>LithoSheet</legend>

            @Html.AlgolaEditorFor(model => model.TaskExecutorName)
            @Html.AlgolaEditorFor(model => model.Version)

            @Html.EditorFor(model => model.Dismissed)

            @Html.AlgolaAutocompleteFor(model => model.FormatMin,"FormatMin","TaskExecutor")
            @Html.AlgolaAutocompleteFor(model => model.FormatMax,"FormatMax","TaskExecutor")
            @Html.AlgolaEditorFor(model => model.WeightMin)
            @Html.AlgolaEditorFor(model => model.WeightMax)
 
            @Html.AlgolaEditorFor(model => model.Pinza)
            @Html.AlgolaEditorFor(model => model.ControPinza)
            @Html.AlgolaEditorFor(model => model.Laterale)
        
            <h3>Stampa</h3>

        <br />

            <div>
                <div class="editor-label" style="float:left">
                    @Html.LabelFor(model => model.PrintingUnit)
                </div>

                <div class="editor-field">
                    @Html.DropDownListFor(model => model.PrintingUnit,
                    new SelectList(printingUnitName))
                </div>
            </div>
        <br />

        
            @Html.EditorFor(model => model.Sheetwise)

            <div>
                <div class="editor-label" style="float:left">
                    @Html.LabelFor(model => model.SheetwiseAfterPrintingUnit)
                </div>

                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SheetwiseAfterPrintingUnit,
                    new SelectList(printingUnitName))
                </div>
            </div>

        <br />

       
            @Html.AlgolaEditorFor(model => model.InkUsage)
            @Html.AlgolaEditorFor(model => model.InkUsageForfait)

            @Html.HiddenFor(model => model.TimeStampTable)
            @Html.HiddenFor(model => model.CodTaskExecutor)
        
            @Html.HiddenFor(model => model.IsEstimatedOnTime)
            @Html.HiddenFor(model => model.IsEstimatedOnRun)
            @Html.HiddenFor(model => model.IsEstimatedOnMq)

            <h3>Scarti</h3> 
        <br />
            @Html.AlgolaAutocompleteFor(model => model.ProofSheetFirstStart,"ProofSheetFirstStart","TaskExecutor")
            @Html.AlgolaAutocompleteFor(model => model.ProofSheetSecondsStart,"ProofSheetSecondsStart","TaskExecutor")

            @Html.AlgolaAutocompleteFor(model => model.ProductionWaste,"ProductionWaste","TaskExecutor")

    </fieldset>

    <p>
        <!-- ViewBag.ActionMethod is used to understand where we are coming and so where we have to go -->
        <input type="submit" name='@ViewBag.ActionMethod' value='@HttpContext.GetLocalResourceObject(strings, "Save")' />
        
        @if (ViewBag.ActionMethod != "CreateLithoSheet")               
        {
            <input type="submit" name="CreateLithoSheet"  value='@HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")' />
        }
    </p>
    
}
<div>
    @Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "Cancel"), "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}