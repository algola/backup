@usi
@model PapiroMVC.Models.PrePostPress
@using PapiroMVC.Validation

@{
    string strings = "~/Areas/DataBase/Views/TaskExecutor/Strings";
    string stringsCod = "~/Views/Shared/TypeOfTaskAndCodTypeOfTask";
    
    foreach (PapiroMVC.Models.TypeOfTask item in ViewBag.TypeOfTaskList)
    {
        item.TaskName = Html.T(stringsCod,"Cod" + item.CodTypeOfTask);
    }


    Model.CodTypeOfTask = Model.CodTypeOfTask == null ? "0001" : Model.CodTypeOfTask;
    
}

<div id="status"> 
    
    @Scripts.Render("~/bundles/jqueryval")

@using (Ajax.BeginForm("Action", "TaskExecutor", new AjaxOptions { UpdateTargetId = "status", OnBegin = "ShowProcessingMsg", OnComplete = "HideProcessingMsg", OnSuccess="OnSuccess" }))
{
    @Html.ValidationSummary(true)

    <fieldset>

        <div class="editor-field">
                @Html.DropDownListFor(model => model.CodTypeOfTask,
                new SelectList(ViewBag.TypeOfTaskList, "CodTypeOfTask", "TaskName"))
        </div>

        <legend>PrePostPress</legend>

            @Html.HiddenFor(model => model.TimeStampTable)

            @Html.AlgolaEditorFor(model => model.TaskExecutorName)
            @Html.AlgolaEditorFor(model => model.Version)
            
            @Html.EditorFor(model => model.Dismissed)

            @Html.AlgolaAutocompleteFor(model => model.FormatMin,"FormatMin","TaskExecutor")
            @Html.AlgolaAutocompleteFor(model => model.FormatMax,"FormatMax","TaskExecutor")
            @Html.AlgolaEditorFor(model => model.WeightMin)
            @Html.AlgolaEditorFor(model => model.WeightMax)
 
            @Html.AlgolaEditorFor(model => model.Pinza)
            @Html.AlgolaEditorFor(model => model.ControPinza)
            @Html.AlgolaEditorFor(model => model.Laterale)

            @Html.HiddenFor(model => model.TimeStampTable)
            @Html.HiddenFor(model => model.CodTaskExecutor)
        
            @Html.HiddenFor(model => model.IsEstimatedOnTime)
            @Html.HiddenFor(model => model.IsEstimatedOnRun)
            @Html.HiddenFor(model => model.IsEstimatedOnMq)
        

    </fieldset>
    <br />
            <p>
            
                <button type="button" onclick="Javascript:window.location.replace('@Url.Action("IndexPrePostPress", "TaskExecutor", new {Area="Database"})');">            
                    <i class="icon-arrow-left"></i>
                     @HttpContext.GetLocalResourceObject(strings, "Cancel")
                </button>

                <button class="default" type="submit" name="@ViewBag.ActionMethod">
                    <i class="icon-save"></i>
                    @HttpContext.GetLocalResourceObject(strings, "Save")
                </button>        
                
                @if (ViewBag.ActionMethod != "CreatePrePostPress")
                {
                    <button class="button" type="submit" name="CreatePrePostPress">
                        <i class="icon-save"></i>
                        @HttpContext.GetLocalResourceObject(strings, "SaveNewBasedOn")
                    </button>
                }
            </p>

}

    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
