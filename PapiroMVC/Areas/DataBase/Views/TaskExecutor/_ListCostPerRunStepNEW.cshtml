@using Mvc.HtmlHelpers
@using MvcContrib.UI.Grid
@using PapiroMVC.Validation
@model PapiroMVC.Models.TaskEstimatedOn

@{
    string strings = "~/Areas/DataBase/Views/TaskExecutor/Strings";
    string url = Url.Action("CostPerRunStepList", new { controller ="TaskExecutor", area = "DataBase", codTaskExecutorOn = Model.CodTaskExecutorOn});
    string editUrl = Url.Action("EditCostPerRunStep", new { controller = "TaskExecutor", area = "DataBase", codTaskExecutorOn = Model.CodTaskExecutorOn });
}

<table id="gridCostPerRunStep@(Model.CodTaskExecutorOn)"><tr><td/></tr></table> 
<div id="pagerCostPerRunStep@(Model.CodTaskExecutorOn)"></div> 

    <script type="text/javascript">

        $(function () {

            var lastSel@(Model.CodTaskExecutorOn) = -1;

            var myGrid = $("#gridCostPerRunStep@(Model.CodTaskExecutorOn)").jqGrid({
                url: '@url',
                editUrl: '@editUrl',
                datatype: 'json',
                colModel: [
                    { name: 'IdStep', label: 'IdStep', key: true, width: 80, editable: true, hidden: true },
                    { name: 'Operation', label: '@HttpContext.GetLocalResourceObject(strings, "DelCaption")', width: 80, align: 'right', editable: false, hidden: false, formatter: delStepCostPerRunStep },
                    { name: 'CodTaskEstimatedOn', width: 60, align: 'right', editable: true, hidden: true },
                    { name: 'FromUnit', label: '@HttpContext.GetLocalResourceObject(strings, "FromRunCaption")', width: 80, align: 'right', editable: true, formatter: insFmatter },
                    { name: 'ToUnit', label: '@HttpContext.GetLocalResourceObject(strings, "ToRunCaption")', width: 80, align: 'right', editable: true, formatter: insFmatter },
                    { name: 'CostPerUnit', label: '@HttpContext.GetLocalResourceObject(strings, "CostPerUnitCaption")', width: 100, align: 'right', editable: true }],

                pager: '#pagerCostPerRunStep@(Model.CodTaskExecutorOn)',
                
                rowNum: 15,
                rowList: [15, 20, 50],
                viewrecords: true,
                autowidth: false,

                onSelectRow: function (id) {
                    if (id && id !== lastSel@(Model.CodTaskExecutorOn)) {
                        myGrid.jqGrid('restoreRow', lastSel@(Model.CodTaskExecutorOn));
                        lastSel@(Model.CodTaskExecutorOn) = id;
                    }
                },

                ondblClickRow: function (id, ri, ci) {
                    myGrid.jqGrid('editRow', id, {
                        keys: true,
                        oneditfunc: function () {
                            //...
                        },
                        aftersavefunc: function(){
                            $("#gridCostPerRunStep@(Model.CodTaskExecutorOn)").trigger("reloadGrid");
                        },
                        url: '@editUrl'
                    });
                    //editRow(rowid, keys, oneditfunc, successfunc, url, extraparam, aftersavefunc, errorfunc, afterrestorefunc);
                    return;
                }

            });

            myGrid.jqGrid('navGrid', '#pagerCostPerRunStep@(Model.CodTaskExecutorOn)', { edit: false, add: false, del: false, search: false });

        });

        function insFmatter(cellvalue, options, rowobject) {
            if (cellvalue == 9999999999)
                return '';
            else
                return cellvalue;
        }

        function delStepCostPerRunStep(cellvalue, options, rowobject) {
            var link = '@Ajax.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "DeletingStep"), "DeletingStep", new {id= "-1"}, new AjaxOptions { HttpMethod = "Delete", OnComplete = "reloadCostPerRunStep" },new {@class="tbutton smalldelete"})';
            return link.replace("-1", cellvalue) 
        }

        function reloadCostPerRunStep() {
            $("#gridCostPerRunStep@(Model.CodTaskExecutorOn)").trigger("reloadGrid");
        }

    </script>