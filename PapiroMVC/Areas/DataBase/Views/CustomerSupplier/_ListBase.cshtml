@model PapiroMVC.Models.CustomerSupplier
@using Mvc.HtmlHelpers
@using MvcContrib.UI.Grid

@{    
    string strings = "~/Areas/DataBase/Views/CustomerSupplier/Strings";
    ViewBag.Title = (string)HttpContext.GetLocalResourceObject(strings, "TitleIndexBase");

    try
    {
        if ((bool)TempData["CreateCustomerSupplier"] == true)
        {
            ViewBag.Message = (string)HttpContext.GetLocalResourceObject(strings, "CustomerSupplierCreatedMessage");
        }
        else
        {
            ViewBag.Message = "";
        }
    }
    catch (Exception e)
    {
        ViewBag.Message = "";
        Console.WriteLine(e.Message);
    }        
}

@Html.HiddenFor(o => o.TimeStampTable)
@(Html.jqGrid("CustomGrid")

    // columns
    .setCaption((string)HttpContext.GetLocalResourceObject(strings, "TitleIndexBase") + " " + @Html.DisplayFor(o => o.BusinessName))
    .addColumn(new Column("Id")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "OperationsCaption"))
        .setCustomFormatter("editCustomerSupplier")
        .setSortable(false))


        .addColumn(new Column("AddressCaption")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "AddressCaption"))
        .setWidth(80)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("PostalCode")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "PostalCodeCaption"))
        .setWidth(30)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("City")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "CityCaption"))
        .setWidth(80)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Province")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "ProvinceCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Country")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "CountryCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Phone")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "PhoneCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Fax")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "FaxCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Email")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "EmailCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Pec")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "PecCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Note")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "NoteCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))
        .addColumn(new Column("Referee")
        .setLabel((string)HttpContext.GetLocalResourceObject(strings, "RefereeCaption"))
        .setWidth(50)
        .setSortable(true)
        .setSearch(true))

    .setUrl(Url.Action("CustomerSupplierBaseList", "CustomerSupplier", new { id = Model.CodCustomerSupplier }))

    .setHeight(300)
    .setRowNum(10)
    .setRowList(new int[] { 10, 20, 50, 100 })
    .setPager("CustomGridAccountPager")
    .setPrint(true)
    .setLoadText("")
    .setAutoWidth(true)
    .setSearchToolbar(true)

    // error handler
    .onLoadError((string)HttpContext.GetLocalResourceObject(strings, "ErrorLoading"))

    // render the html
    .Render()
)

<div>
    @Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "BackToCustomerSupplierList"), "Index",null,new {@class="tbutton cancel icon"})
    @Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "CreateBase"), "CreateBase", new { id = Model.CodCustomerSupplier }, new {id = "CreateBase" , @class="tbutton smalladd icon"})
</div>


<script type="text/javascript">
    function editCustomerSupplier(cellvalue, options, rowobject) {

        var link = '@Html.ActionLink((string)HttpContext.GetLocalResourceObject(strings, "Edit"), "Edit" + "Base", new { id = "-1" },new {@class="tbutton smalledit"})';
        return link.replace("-1", cellvalue);
    }


    jQuery(document).ready(function($) {

        if ('@(ViewBag.Message)' != "") {
            $.blockUI({
                message: '@(ViewBag.Message)',
                css: {
                    border: 'none',
                    padding: '15px',
                    backgroundColor: '#000',
                    '-webkit-border-radius': '10px',
                    '-moz-border-radius': '10px',
                    opacity: .5,
                    color: '#fff'
                }
            });
            $('.blockOverlay').attr('title', 'Click to unblock').click($.unblockUI);
        }
    });
    /* ]]> */
</script>
