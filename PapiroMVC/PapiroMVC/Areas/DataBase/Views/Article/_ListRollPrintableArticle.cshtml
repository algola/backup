@model PapiroMVC.Models.RollPrintableArticleAutoChanges
@using Mvc.HtmlHelpers

@using PapiroMVC.Validation

@{
    string strings = "~/Areas/DataBase/Views/Article/Strings";
    ViewBag.Title = (string)@Html.T(strings, "TitleIndex");

    string[] typeOfArticle = new string[4];
    typeOfArticle[0] = (string)@Html.T(strings, "SheetPrintableArticleType");
    typeOfArticle[1] = (string)@Html.T(strings, "RollPrintableArticleType");
    typeOfArticle[2] = (string)@Html.T(strings, "ObjectPrintableArticleType");
    typeOfArticle[3] = (string)@Html.T(strings, "RigidPrintableArticleType");
}

<div id="containerbox">
    <!-- Main Page -->

    <table id="ArticleGrid"></table>
    <div id="CustomGridAccountPager"></div>

@*    @(Html.jqGrid("ArticleGrid")

    .setCaption((string)@Html.T(strings, "RollPrintableArticleGridCaption"))
        .setCaption("")

    .setMultiSelect(true)
            // columns
    .addColumn(new Column("Id")
        .setLabel((string)@Html.T(strings, "OperationsCaption"))
        .setWidth(@Html.T(strings, "OperationsCaptionWidth") == null ? 60 : Convert.ToInt32(@Html.T(strings, "OperationsCaptionWidth")))
        .setCustomFormatter("editArticle")
        .setSortable(false))
    .addColumn(new Column("CodArticle")
        .setLabel((string)@Html.T(strings, "CodArticleCaption"))
        .setWidth(80)
        .setSortable(true))

    .addColumn(new Column("TypeOfMaterial")
        .setLabel((string)@Html.T(strings, "TypeOfMaterialCaption"))
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("NameOfMaterial")
        .setLabel((string)@Html.T(strings, "NameOfMaterialCaption"))
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("Color")
        .setLabel((string)@Html.T(strings, "ColorCaption"))
        .setWidth(100)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("Weight")
        .setLabel((string)@Html.T(strings, "WeightCaption"))
        .setWidth(45)
        .setSortable(true)
        .setAlign(Align.right)
        .setSearch(true))

    .addColumn(new Column("Width")
        .setLabel((string)@Html.T(strings, "WidthCaption"))
        .setWidth(45)
        .setAlign(Align.right)
        .setSortable(true)
        .setSearch(true))

    .addColumn(new Column("SupplierName")
        .setLabel((string)@Html.T(strings, "SupplierNameCaption"))
        .setSearch(true)
        .setWidth(150))

    .addColumn(new Column("CostPerMq")
        .setLabel((string)@Html.T(strings, "CostPerMqCaption"))
        .setTitle(false)
        .setSearch(true)
        .setWidth(45)
        .setAlign(Align.right))

    .addColumn(new Column("CostPerMl")
        .setLabel((string)@Html.T(strings, "CostPerMlCaption"))
        .setSearch(true)
        .setWidth(45)
        .setAlign(Align.right))

    .setUrl(Url.Action("RollPrintableArticleList", "Article"))

    .setHeight(300)
    .setRowNum(20)
    .setRowList(new int[] { 10, 20, 50, 100 })
    .setPager("CustomGridAccountPager")
    .setPrint(true)
    .setLoadText("")
    .setAutoWidth(true)
    .setSearchToolbar(true)
    .setViewRecords(true)

    // error handler
    .onLoadError((string)@Html.T(strings, "ErrorLoading"))

    // render the html
    .Render()
    ) *@

    <br />


    <button class="btn btn-primary" type="button" onclick="Javascript:window.location.replace('@Url.Action("CreateRollPrintableArticle", "Article", new { Area = "Database" })');">
        <i class="icon-plus"></i>
        @Html.T(strings, "CreateRollPrintableArticle")
    </button>

    <button class="btn btn-primary" type="button" onclick="Javascript:window.location.replace('@Url.Action("WizardRollPrintableArticle", "Article", new { Area = "Database" })');">
        <i class="icon-plus"></i>
        @Html.T(strings, "WizardRollPrintableArticle")
    </button>

</div>

<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>
@*
    <div id="accordion2" class="accordion accordion-style2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a href="#collapseOne" data-parent="#accordion2" data-toggle="collapse" class="accordion-toggle collapsed">@Html.T(strings, "AutoCahngesCaption")
                </a>
            </div>

            <div class="accordion-body collapse" id="collapseOne" style="height: 0px;">
                <div class="accordion-inner">
                    <div id="sheetPrintableArticleAutoChanges">
                @Html.Partial("_RollPrintableArticleAutoChanges", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
*@



<script type="text/javascript">
    jQuery(function ($) {
        var grid_selector = "#ArticleGrid";
        var pager_selector = "#CustomGridAccountPager";

        jQuery(grid_selector).jqGrid({
            //direction: "rtl",
            url: '@Url.Action("RollPrintableArticleList", "Article")',
            datatype: 'json',


            colModel: [
                { name: 'Id', label: '@HttpContext.GetLocalResourceObject(strings, "OperationsCaption")', width: '@(Html.T(strings, "OperationsCaptionWidth") == null ? 60 : Convert.ToInt32(Html.T(strings, "OperationsCaptionWidth")))', title: false, sortable: false, formatter: editArticle },
                { name: 'CodArticle', label: '@HttpContext.GetLocalResourceObject(strings, "CodArticleCaption")', width: 80, title: false, search: true, sortable: true },
                { name: 'TypeOfMaterial', label: '@HttpContext.GetLocalResourceObject(strings, "TypeOfMaterialCaption")', width: 100, title: false, search: true, sortable: true },
                { name: 'NameOfMaterial', label: '@HttpContext.GetLocalResourceObject(strings, "NameOfMaterialCaption")', width: 100, title: false, search: true, sortable: true },
                { name: 'Color', label: '@HttpContext.GetLocalResourceObject(strings, "ColorCaption")', width: 100, title: false, search: true, sortable: true },
                { name: 'Weight', label: '@HttpContext.GetLocalResourceObject(strings, "WeightCaption")', align: 'right', width: 45, title: false, search: true, sortable: true },
                { name: 'Width', label: '@HttpContext.GetLocalResourceObject(strings, "WidthCaption")', align: 'right', width: 45, title: false, search: true, sortable: true },
                { name: 'SupplierName', label: '@HttpContext.GetLocalResourceObject(strings, "SupplierNameCaption")', width: 150, title: false, search: true },
                { name: 'CostPerMq', label: '@HttpContext.GetLocalResourceObject(strings, "CostPerMqCaption")', width: 45, title: false, search: true, align: 'right' },
                { name: 'CostPerMl', label: '@HttpContext.GetLocalResourceObject(strings, "CostPerMlCaption")', width: 45, title: false, search: true, align: 'right' }
            ],

            loadtext: '',
            viewrecords: true,
            autowidth: true,
            print: true,
            height: 300,
            viewrecords: true,
            rowNum: 20,
            rowList: [10, 20, 50, 100],
            pager: pager_selector,
            multiselect: true,

            loaderror: '@(Html.T(strings, "ErrorLoading"))',


            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updateActionIcons(table);
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);
            }

        });

        jQuery(grid_selector).jqGrid('filterToolbar', { stringResult: true });


        //unlike navButtons icons, action icons in rows seem to be hard-coded
        //you can change them like this in here if you want
        function updateActionIcons(table) {
            /**
            var replacement =
            {
                'ui-icon-pencil' : 'icon-pencil blue',
                'ui-icon-trash' : 'icon-trash red',
                'ui-icon-disk' : 'icon-ok green',
                'ui-icon-cancel' : 'icon-remove red'
            };
            $(table).find('.ui-pg-div span.ui-icon').each(function(){
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));
                if($class in replacement) icon.attr('class', 'ui-icon '+replacement[$class]);
            })
            */
        }

        //replace icons with FontAwesome icons like above
        function updatePagerIcons(table) {
            var replacement =
            {
                'ui-icon-seek-first': 'icon-double-angle-left bigger-140',
                'ui-icon-seek-prev': 'icon-angle-left bigger-140',
                'ui-icon-seek-next': 'icon-angle-right bigger-140',
                'ui-icon-seek-end': 'icon-double-angle-right bigger-140'
            };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }

        function enableTooltips(table) {
            $('.navtable .ui-pg-button').tooltip({ container: 'body' });
            $(table).find('.ui-pg-div').tooltip({ container: 'body' });
        }

        //var selr = jQuery(grid_selector).jqGrid('getGridParam','selrow');


    });


</script>

<script type="text/javascript">

    $(window).bind('resize', function () {

        var myGrid = $("#ArticleGrid");
        var width = $("#body-container").width();
        try {
            myGrid.jqGrid('setGridWidth', width, true);

        } catch (e) {

        }

    }).trigger('resize');



</script>


